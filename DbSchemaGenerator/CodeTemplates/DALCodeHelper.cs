// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 11.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace DbSchemaGenerator.CodeTemplates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using DbSchemaGenerator.Base;
    using DbSchemaGenerator.Utility;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public partial class DALCodeHelper : DALCodeHelperBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            #line 8 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"

    AbsTableSchema TableObject = tableObject;
    string TableName = tableName;
    string NameSpace = nameSpace;
    TableSchemaObject TableSchema = TableObject.GetTableSchema(TableName);
    string PrimaryKey = TableSchema.PrimaryKey;
    List<ColumnObject> ColumnInfo = TableSchema.ColumnInfo;

            
            #line default
            #line hidden
            this.Write("using ");
            
            #line 16 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NameSpace));
            
            #line default
            #line hidden
            this.Write(".Domain;\r\nusing ");
            
            #line 17 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NameSpace));
            
            #line default
            #line hidden
            this.Write(".Domain.Constancy;\r\nusing Rest.Core.Constancy;\r\nusing Rest.Core;\r\nusing System;\r\n" +
                    "using System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnam" +
                    "espace ");
            
            #line 25 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(NameSpace));
            
            #line default
            #line hidden
            this.Write(".DAL.");
            
            #line 25 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    #region interface\r\n    public interface I");
            
            #line 28 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Repo\r\n    {\r\n        ");
            
            #line 30 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info GetBySN(int ");
            
            #line 30 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKey));
            
            #line default
            #line hidden
            this.Write(");\r\n        List<");
            
            #line 31 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetAll();\r\n        List<");
            
            #line 32 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 32 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter Filter);\r\n        List<");
            
            #line 33 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 33 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter Filter, Paging Page);\r\n        List<");
            
            #line 34 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 34 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter Filter, string _orderby);\r\n        List<");
            
            #line 35 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 35 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter Filter, string _orderby, Paging Page);\r\n        List<");
            
            #line 36 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 36 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter Filter, string[] fieldNames, string _orderby, Paging Page);\r\n        List" +
                    "<");
            
            #line 37 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 37 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter Filter, Paging Page, string[] fieldNames, string _orderby);\r\n        int " +
                    "Insert(");
            
            #line 38 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info data);\r\n        int Update(int ");
            
            #line 39 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKey));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 39 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info data, List<string> columns);\r\n        int Update(");
            
            #line 40 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info data);\r\n        int Delete(int ");
            
            #line 41 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKey));
            
            #line default
            #line hidden
            this.Write(");\r\n    }\r\n    #endregion\r\n\r\n    #region Implementation\r\n    public class ");
            
            #line 46 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Repo\r\n    {\r\n        #region Operation: Select\r\n        public ");
            
            #line 49 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info GetBySN(int ");
            
            #line 49 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKey));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            using (var db = new DBExecutor().GetDatabase())\r\n      " +
                    "      {\r\n                var SQLStr = Rest.Core.PetaPoco.Sql.Builder\r\n          " +
                    "      .Append(\"SELECT * FROM ");
            
            #line 54 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("\")\r\n                .Append(\"WHERE ");
            
            #line 55 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKey));
            
            #line default
            #line hidden
            this.Write("=@0\", ");
            
            #line 55 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKey));
            
            #line default
            #line hidden
            this.Write(");\r\n\r\n                var result = db.SingleOrDefault<");
            
            #line 57 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info>(SQLStr);\r\n                return result;\r\n            }\r\n        }\r\n\r\n    " +
                    "    public List<");
            
            #line 62 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetAll()\r\n        {\r\n            using (var db = new DBExecutor().GetDatab" +
                    "ase())\r\n            {\r\n                var SQLStr = Rest.Core.PetaPoco.Sql.Build" +
                    "er\r\n                    .Append(\"SELECT * FROM ");
            
            #line 67 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("\");\r\n                var result = db.Query<");
            
            #line 68 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info>(SQLStr).ToList();\r\n\r\n                return result;\r\n            }\r\n      " +
                    "  }\r\n\r\n        public List<");
            
            #line 74 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 74 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter Filter)\r\n        {\r\n            return GetByParam(Filter, null, null, \"\")" +
                    ";\r\n        }\r\n\r\n        public List<");
            
            #line 79 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 79 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter Filter, Paging Page)\r\n        {\r\n            return GetByParam(Filter, Pa" +
                    "ge, null, \"\");\r\n        }\r\n\r\n        public List<");
            
            #line 84 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 84 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter Filter, string _orderby)\r\n        {\r\n            return GetByParam(Filter" +
                    ", null, null, _orderby);\r\n        }\r\n\r\n        public List<");
            
            #line 89 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 89 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter Filter, string _orderby, Paging Page)\r\n        {\r\n            return GetB" +
                    "yParam(Filter, Page, null, _orderby);\r\n        }\r\n\r\n        public List<");
            
            #line 94 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 94 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter Filter, string[] fieldNames, string _orderby, Paging Page)\r\n        {\r\n  " +
                    "          return GetByParam(Filter, Page, fieldNames, _orderby);\r\n        }\r\n\r\n " +
                    "       public List<");
            
            #line 99 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info> GetByParam(");
            
            #line 99 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write(@"_Filter Filter, Paging Page, string[] fieldNames, string _orderby)
        {
            if (fieldNames == null) { fieldNames = new string[] { ""*"" }; }
            if (Page == null) { Page = new Paging(); }
            using (var db = new DBExecutor().GetDatabase())
            {
                var SQLStr = ConstructSQL(Filter, fieldNames, _orderby);

                var result = db.Page<");
            
            #line 107 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info>(Page.CurrentPage, Page.ItemsPerPage, SQLStr);\r\n                Page.Conver" +
                    "t<");
            
            #line 108 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info>(result);\r\n\r\n                return result.Items;\r\n            }\r\n        }" +
                    "\r\n\r\n        #endregion\r\n\r\n        #region Operation: Insert\r\n        public int " +
                    "Insert(");
            
            #line 117 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write(@"_Info data)
        {
            using (var db = new DBExecutor().GetDatabase())
            {
                int NewID = 0;
                var result = db.Insert(data);
                if (result != null)
                {
                    int.TryParse(result.ToString(), out NewID);
                }
                return NewID;
            }
        }
        #endregion

        #region Operation: Update
        public int Update(int ");
            
            #line 133 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKey));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 133 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info data, List<string> columns)\r\n        {\r\n            using (var db = new DBE" +
                    "xecutor().GetDatabase())\r\n            {\r\n                return db.Update(data, " +
                    "");
            
            #line 137 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKey));
            
            #line default
            #line hidden
            this.Write(", columns);\r\n            }\r\n        }\r\n\r\n        public int Update(");
            
            #line 141 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Info data)\r\n        {\r\n            using (var db = new DBExecutor().GetDatabase(" +
                    "))\r\n            {\r\n                return db.Update(data);\r\n            }\r\n     " +
                    "   }\r\n        #endregion\r\n\r\n        #region Operation: Delete\r\n        public in" +
                    "t Delete(int ");
            
            #line 151 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKey));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            using (var db = new DBExecutor().GetDatabase())\r\n      " +
                    "      {\r\n                return db.Delete(\"");
            
            #line 155 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 155 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKey));
            
            #line default
            #line hidden
            this.Write("\", null, ");
            
            #line 155 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PrimaryKey));
            
            #line default
            #line hidden
            this.Write(");\r\n            }\r\n        }\r\n        #endregion\r\n\r\n        #region public functi" +
                    "on\r\n        #endregion\r\n\r\n        #region private function\r\n        private Rest" +
                    ".Core.PetaPoco.Sql ConstructSQL(");
            
            #line 164 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter filter)\r\n        {\r\n            return ConstructSQL(filter, new string[] " +
                    "{ \"*\" }, \"\");\r\n        }\r\n\r\n        private Rest.Core.PetaPoco.Sql ConstructSQL(" +
                    "");
            
            #line 169 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("_Filter filter, string[] fieldNames, string _orderby)\r\n        {\r\n            var" +
                    " SQLStr = Rest.Core.PetaPoco.Sql.Builder\r\n                .Append(\"SELECT \" + Fi" +
                    "eldNameArrayToFieldNameString(fieldNames) + \" FROM ");
            
            #line 172 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(TableName));
            
            #line default
            #line hidden
            this.Write("\")\r\n                .Append(\"WHERE 1=1 \");\r\n            if (filter != null)\r\n    " +
                    "        {\r\n");
            
            #line 176 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"

    ColumnInfo.ForEach(x=>{
        if (x.ToCSharpType() == "string"){
            
            
            #line default
            #line hidden
            this.Write("                if (!string.IsNullOrEmpty(filter.");
            
            #line 180 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(x.ColumnName));
            
            #line default
            #line hidden
            this.Write("))\r\n                {\r\n                    SQLStr.Append(\" AND ");
            
            #line 182 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(x.ColumnName));
            
            #line default
            #line hidden
            this.Write("=@0\", filter.");
            
            #line 182 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(x.ColumnName));
            
            #line default
            #line hidden
            this.Write(");\r\n                }\r\n            ");
            
            #line 184 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"

        }else{
            
            
            #line default
            #line hidden
            this.Write("                if (filter.");
            
            #line 187 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(x.ColumnName));
            
            #line default
            #line hidden
            this.Write(".HasValue)\r\n                {\r\n                    SQLStr.Append(\" AND ");
            
            #line 189 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(x.ColumnName));
            
            #line default
            #line hidden
            this.Write("=@0\", filter.");
            
            #line 189 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(x.ColumnName));
            
            #line default
            #line hidden
            this.Write(".Value);\r\n                }\r\n            ");
            
            #line 191 "Y:\Inno\DbSchemaGenerator\CodeTemplates\DALCodeHelper.tt"

        }
    });

            
            #line default
            #line hidden
            this.Write(@"                if (_orderby != """")
                    SQLStr.OrderBy(_orderby);

            }
            return SQLStr;
        }

        private string FieldNameArrayToFieldNameString(string[] fieldNames)
        {
            return string.Join("", "", fieldNames);
        }
        #endregion
    }
    #endregion

}
");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public class DALCodeHelperBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
